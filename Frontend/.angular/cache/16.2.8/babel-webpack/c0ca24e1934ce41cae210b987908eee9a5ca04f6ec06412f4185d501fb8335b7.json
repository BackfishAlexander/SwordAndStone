{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/forms\";\nexport class RegisterComponent {\n  constructor(http) {\n    this.http = http;\n    this.username = '';\n    this.password = '';\n  }\n  onSubmit() {\n    const payload = {\n      username: this.username,\n      password: this.password\n    };\n    this.http.post('http://localhost:8080/register', payload).subscribe(response => {\n      console.log('Registration successful!', response);\n      document.write(\"successfully registered account \" + this.username);\n    }, error => {\n      console.error('Registration failed:', error);\n      document.write(\"fialed to register account \" + this.username);\n    });\n  }\n  static #_ = this.ɵfac = function RegisterComponent_Factory(t) {\n    return new (t || RegisterComponent)(i0.ɵɵdirectiveInject(i1.HttpClient));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: RegisterComponent,\n    selectors: [[\"app-register\"]],\n    decls: 14,\n    vars: 2,\n    consts: [[3, \"ngSubmit\"], [\"registerForm\", \"ngForm\"], [1, \"form-group\"], [\"for\", \"username\"], [\"type\", \"text\", \"id\", \"username\", \"name\", \"username\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"password\"], [\"type\", \"password\", \"id\", \"password\", \"name\", \"password\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\"]],\n    template: function RegisterComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"h3\");\n        i0.ɵɵtext(1, \"Register\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"form\", 0, 1);\n        i0.ɵɵlistener(\"ngSubmit\", function RegisterComponent_Template_form_ngSubmit_2_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(4, \"div\", 2)(5, \"label\", 3);\n        i0.ɵɵtext(6, \"Username:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"input\", 4);\n        i0.ɵɵlistener(\"ngModelChange\", function RegisterComponent_Template_input_ngModelChange_7_listener($event) {\n          return ctx.username = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(8, \"div\", 2)(9, \"label\", 5);\n        i0.ɵɵtext(10, \"Password:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"input\", 6);\n        i0.ɵɵlistener(\"ngModelChange\", function RegisterComponent_Template_input_ngModelChange_11_listener($event) {\n          return ctx.password = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(12, \"button\", 7);\n        i0.ɵɵtext(13, \"Register\");\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"ngModel\", ctx.username);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.password);\n      }\n    },\n    dependencies: [i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.RequiredValidator, i2.NgModel, i2.NgForm],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["RegisterComponent","constructor","http","username","password","onSubmit","payload","post","subscribe","response","console","log","document","write","error","_","i0","ɵɵdirectiveInject","i1","HttpClient","_2","selectors","decls","vars","consts","template","RegisterComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","RegisterComponent_Template_form_ngSubmit_2_listener","RegisterComponent_Template_input_ngModelChange_7_listener","$event","RegisterComponent_Template_input_ngModelChange_11_listener","ɵɵadvance","ɵɵproperty"],"sources":["/Users/alex/Documents/Programs/SwordInStone/Frontend/src/app/register/register.component.ts","/Users/alex/Documents/Programs/SwordInStone/Frontend/src/app/register/register.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent {\n  username: string = '';\n  password: string = '';\n\n  constructor(private http: HttpClient) {}\n\n  onSubmit() {\n    const payload = {\n      username: this.username,\n      password: this.password\n    };\n\n    this.http.post('http://localhost:8080/register', payload).subscribe(response => {\n      console.log('Registration successful!', response);\n      document.write(\"successfully registered account \" + this.username);\n    }, error => {\n      console.error('Registration failed:', error);\n      document.write(\"fialed to register account \" + this.username);\n    });\n  }\n}\n","<h3>Register</h3>\n<form (ngSubmit)=\"onSubmit()\" #registerForm=\"ngForm\">\n    <div class=\"form-group\">\n        <label for=\"username\">Username:</label>\n        <input type=\"text\" class=\"form-control\" id=\"username\" [(ngModel)]=\"username\" name=\"username\" required>\n    </div>\n    <div class=\"form-group\">\n        <label for=\"password\">Password:</label>\n        <input type=\"password\" class=\"form-control\" id=\"password\" [(ngModel)]=\"password\" name=\"password\" required>\n    </div>\n    <button type=\"submit\" class=\"btn btn-primary\">Register</button>\n</form>\n"],"mappings":";;;AAQA,OAAM,MAAOA,iBAAiB;EAI5BC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAHxB,KAAAC,QAAQ,GAAW,EAAE;IACrB,KAAAC,QAAQ,GAAW,EAAE;EAEkB;EAEvCC,QAAQA,CAAA;IACN,MAAMC,OAAO,GAAG;MACdH,QAAQ,EAAE,IAAI,CAACA,QAAQ;MACvBC,QAAQ,EAAE,IAAI,CAACA;KAChB;IAED,IAAI,CAACF,IAAI,CAACK,IAAI,CAAC,gCAAgC,EAAED,OAAO,CAAC,CAACE,SAAS,CAACC,QAAQ,IAAG;MAC7EC,OAAO,CAACC,GAAG,CAAC,0BAA0B,EAAEF,QAAQ,CAAC;MACjDG,QAAQ,CAACC,KAAK,CAAC,kCAAkC,GAAG,IAAI,CAACV,QAAQ,CAAC;IACpE,CAAC,EAAEW,KAAK,IAAG;MACTJ,OAAO,CAACI,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC5CF,QAAQ,CAACC,KAAK,CAAC,6BAA6B,GAAG,IAAI,CAACV,QAAQ,CAAC;IAC/D,CAAC,CAAC;EACJ;EAAC,QAAAY,CAAA,G;qBAnBUf,iBAAiB,EAAAgB,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;UAAjBpB,iBAAiB;IAAAqB,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,2BAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCR9BX,EAAA,CAAAa,cAAA,SAAI;QAAAb,EAAA,CAAAc,MAAA,eAAQ;QAAAd,EAAA,CAAAe,YAAA,EAAK;QACjBf,EAAA,CAAAa,cAAA,iBAAqD;QAA/Cb,EAAA,CAAAgB,UAAA,sBAAAC,oDAAA;UAAA,OAAYL,GAAA,CAAAvB,QAAA,EAAU;QAAA,EAAC;QACzBW,EAAA,CAAAa,cAAA,aAAwB;QACEb,EAAA,CAAAc,MAAA,gBAAS;QAAAd,EAAA,CAAAe,YAAA,EAAQ;QACvCf,EAAA,CAAAa,cAAA,eAAsG;QAAhDb,EAAA,CAAAgB,UAAA,2BAAAE,0DAAAC,MAAA;UAAA,OAAAP,GAAA,CAAAzB,QAAA,GAAAgC,MAAA;QAAA,EAAsB;QAA5EnB,EAAA,CAAAe,YAAA,EAAsG;QAE1Gf,EAAA,CAAAa,cAAA,aAAwB;QACEb,EAAA,CAAAc,MAAA,iBAAS;QAAAd,EAAA,CAAAe,YAAA,EAAQ;QACvCf,EAAA,CAAAa,cAAA,gBAA0G;QAAhDb,EAAA,CAAAgB,UAAA,2BAAAI,2DAAAD,MAAA;UAAA,OAAAP,GAAA,CAAAxB,QAAA,GAAA+B,MAAA;QAAA,EAAsB;QAAhFnB,EAAA,CAAAe,YAAA,EAA0G;QAE9Gf,EAAA,CAAAa,cAAA,iBAA8C;QAAAb,EAAA,CAAAc,MAAA,gBAAQ;QAAAd,EAAA,CAAAe,YAAA,EAAS;;;QANLf,EAAA,CAAAqB,SAAA,GAAsB;QAAtBrB,EAAA,CAAAsB,UAAA,YAAAV,GAAA,CAAAzB,QAAA,CAAsB;QAIlBa,EAAA,CAAAqB,SAAA,GAAsB;QAAtBrB,EAAA,CAAAsB,UAAA,YAAAV,GAAA,CAAAxB,QAAA,CAAsB"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class UtilsService {\n  constructor() {}\n  //This is \n  statToPlus(num) {\n    let r = (num - 10) / 2;\n    if (r < 0) {\n      return \"\" + r;\n    } else {\n      return \"+\" + r;\n    }\n  }\n  static #_ = this.ɵfac = function UtilsService_Factory(t) {\n    return new (t || UtilsService)();\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: UtilsService,\n    factory: UtilsService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["UtilsService","constructor","statToPlus","num","r","_","_2","factory","ɵfac","providedIn"],"sources":["/Users/alex/Documents/Programs/SwordInStone/Frontend/src/app/services/utils.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UtilsService {\n\n  constructor() { }\n\n\n  //This is \n  statToPlus(num: number) {\n      let r = (num - 10) / 2;\n      if (r < 0) {\n        return \"\" + r;\n      }\n      else {\n        return \"+\" + r;\n      }\n  }\n}\n"],"mappings":";AAKA,OAAM,MAAOA,YAAY;EAEvBC,YAAA,GAAgB;EAGhB;EACAC,UAAUA,CAACC,GAAW;IAClB,IAAIC,CAAC,GAAG,CAACD,GAAG,GAAG,EAAE,IAAI,CAAC;IACtB,IAAIC,CAAC,GAAG,CAAC,EAAE;MACT,OAAO,EAAE,GAAGA,CAAC;KACd,MACI;MACH,OAAO,GAAG,GAAGA,CAAC;;EAEpB;EAAC,QAAAC,CAAA,G;qBAdUL,YAAY;EAAA;EAAA,QAAAM,EAAA,G;WAAZN,YAAY;IAAAO,OAAA,EAAZP,YAAY,CAAAQ,IAAA;IAAAC,UAAA,EAFX;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}
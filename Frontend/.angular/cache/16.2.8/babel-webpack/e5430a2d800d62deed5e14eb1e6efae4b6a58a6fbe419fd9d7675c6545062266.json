{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let RegisterComponent = class RegisterComponent {\n  constructor(http, auth, router) {\n    this.http = http;\n    this.auth = auth;\n    this.router = router;\n    this.username = '';\n    this.password = '';\n  }\n  onSubmit() {\n    console.log(\"BUTTON CLICKED!\");\n    this.auth.register(this.username, this.password).then(success => {\n      if (success) {\n        console.log('Logged in successfully');\n        this.router.navigate(['/']);\n      } else {\n        console.log('Login failed');\n        // Handle login failure\n      }\n    }).catch(error => {\n      console.error('An error occurred during login', error);\n      // Handle the error\n    });\n  }\n};\n\nRegisterComponent = __decorate([Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})], RegisterComponent);\nthis.auth.register(this.username, this.password);","map":{"version":3,"names":["Component","RegisterComponent","constructor","http","auth","router","username","password","onSubmit","console","log","register","then","success","navigate","catch","error","__decorate","selector","templateUrl","styleUrls"],"sources":["/Users/alex/Documents/Programs/SwordInStone/Frontend/src/app/register/register.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { AuthenticationService } from '../services/authentication.service';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent {\n  username: string = '';\n  password: string = '';\n\n  constructor(private http: HttpClient, private auth: AuthenticationService,\n    private router: ActivatedRoute) {}\n\n  onSubmit() {\n\n    console.log(\"BUTTON CLICKED!\")\n    this.auth.register(this.username, this.password).then(success => {\n      if (success) {\n        console.log('Logged in successfully');\n        this.router.navigate(['/']);\n      } else {\n        console.log('Login failed');\n        // Handle login failure\n      }\n    }).catch(error => {\n      console.error('An error occurred during login', error);\n      // Handle the error\n    });\n  }\n\n\n    this.auth.register(this.username, this.password);\n  }\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AASlC,WAAMC,iBAAiB,GAAvB,MAAMA,iBAAiB;EAI5BC,YAAoBC,IAAgB,EAAUC,IAA2B,EAC/DC,MAAsB;IADZ,KAAAF,IAAI,GAAJA,IAAI;IAAsB,KAAAC,IAAI,GAAJA,IAAI;IACxC,KAAAC,MAAM,GAANA,MAAM;IAJhB,KAAAC,QAAQ,GAAW,EAAE;IACrB,KAAAC,QAAQ,GAAW,EAAE;EAGc;EAEnCC,QAAQA,CAAA;IAENC,OAAO,CAACC,GAAG,CAAC,iBAAiB,CAAC;IAC9B,IAAI,CAACN,IAAI,CAACO,QAAQ,CAAC,IAAI,CAACL,QAAQ,EAAE,IAAI,CAACC,QAAQ,CAAC,CAACK,IAAI,CAACC,OAAO,IAAG;MAC9D,IAAIA,OAAO,EAAE;QACXJ,OAAO,CAACC,GAAG,CAAC,wBAAwB,CAAC;QACrC,IAAI,CAACL,MAAM,CAACS,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC;OAC5B,MAAM;QACLL,OAAO,CAACC,GAAG,CAAC,cAAc,CAAC;QAC3B;;IAEJ,CAAC,CAAC,CAACK,KAAK,CAACC,KAAK,IAAG;MACfP,OAAO,CAACO,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;MACtD;IACF,CAAC,CAAC;EACJ;CAAC;;AAtBUf,iBAAiB,GAAAgB,UAAA,EAL7BjB,SAAS,CAAC;EACTkB,QAAQ,EAAE,cAAc;EACxBC,WAAW,EAAE,2BAA2B;EACxCC,SAAS,EAAE,CAAC,0BAA0B;CACvC,CAAC,C,EACWnB,iBAAiB,CAsB3B;AAGC,IAAI,CAACG,IAAI,CAACO,QAAQ,CAAC,IAAI,CAACL,QAAQ,EAAE,IAAI,CAACC,QAAQ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import { FormGroup, FormControl, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/character.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction CreateCharacterModalComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r2 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 1)(1, \"div\", 2)(2, \"form\", 3);\n    i0.ɵɵlistener(\"ngSubmit\", function CreateCharacterModalComponent_div_0_Template_form_ngSubmit_2_listener() {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.onSubmit());\n    });\n    i0.ɵɵelementStart(3, \"div\", 4)(4, \"label\", 5);\n    i0.ɵɵtext(5, \"Character Name:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(6, \"input\", 6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"div\", 4)(8, \"label\", 7);\n    i0.ɵɵtext(9, \"Character Description:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(10, \"textarea\", 8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"div\", 4)(12, \"label\", 9);\n    i0.ɵɵtext(13, \"Image URL:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(14, \"input\", 10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(15, \"button\", 11);\n    i0.ɵɵtext(16, \"Create Character\");\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"formGroup\", ctx_r0.characterForm);\n    i0.ɵɵadvance(13);\n    i0.ɵɵproperty(\"disabled\", !ctx_r0.characterForm.valid);\n  }\n}\nexport class CreateCharacterModalComponent {\n  // Make sure to import and inject the CharacterService correctly\n  constructor(characterService) {\n    this.characterService = characterService;\n    // The isModalOpen property should be public to be accessible from the template\n    this.characterForm = new FormGroup({\n      name: new FormControl('', Validators.required),\n      description: new FormControl('', Validators.required),\n      imageUrl: new FormControl('', Validators.required)\n    });\n  }\n  // The onSubmit method\n  onSubmit() {\n    if (this.characterForm.valid) {\n      this.characterService.createCharacter(this.characterForm.value).subscribe(response => {\n        console.log('Character created:', response);\n      }, error => {\n        console.error('Error creating character:', error);\n      });\n    }\n  }\n  static #_ = this.ɵfac = function CreateCharacterModalComponent_Factory(t) {\n    return new (t || CreateCharacterModalComponent)(i0.ɵɵdirectiveInject(i1.CharacterService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CreateCharacterModalComponent,\n    selectors: [[\"app-create-character-modal\"]],\n    decls: 1,\n    vars: 1,\n    consts: [[\"class\", \"modal\", 4, \"ngIf\"], [1, \"modal\"], [1, \"modal-content\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\"], [\"for\", \"characterName\"], [\"type\", \"text\", \"id\", \"characterName\", \"formControlName\", \"name\", \"placeholder\", \"Enter character name\", 1, \"form-control\"], [\"for\", \"characterDescription\"], [\"id\", \"characterDescription\", \"formControlName\", \"description\", \"rows\", \"3\", \"placeholder\", \"Enter character description\", 1, \"form-control\"], [\"for\", \"imageURL\"], [\"type\", \"text\", \"id\", \"imageURL\", \"formControlName\", \"imageUrl\", \"placeholder\", \"Enter image URL\", 1, \"form-control\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 3, \"disabled\"]],\n    template: function CreateCharacterModalComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, CreateCharacterModalComponent_div_0_Template, 17, 2, \"div\", 0);\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", ctx.isModalOpen);\n      }\n    },\n    dependencies: [i2.NgIf, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.FormGroupDirective, i3.FormControlName],\n    styles: [\"\\n\\n.modal[_ngcontent-%COMP%] {\\n    display: none; \\n\\n    position: fixed; \\n\\n    z-index: 1000; \\n\\n    left: 0;\\n    top: 0;\\n    width: 100%; \\n\\n    height: 100%; \\n\\n    overflow: auto; \\n\\n    background-color: rgb(0, 0, 0); \\n\\n    background-color: rgba(0, 0, 0, 0.4); \\n\\n  }\\n  \\n  \\n\\n  .modal-content[_ngcontent-%COMP%] {\\n    position: relative;\\n    background-color: #fefefe;\\n    margin: 10% auto; \\n\\n    padding: 20px;\\n    border: 1px solid #888;\\n    width: 80%; \\n\\n    box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2);\\n    animation-name: _ngcontent-%COMP%_animatetop;\\n    animation-duration: 0.4s;\\n  }\\n  \\n  \\n\\n  @keyframes _ngcontent-%COMP%_animatetop {\\n    from {top: -300px; opacity: 0}\\n    to {top: 0; opacity: 1}\\n  }\\n  \\n  \\n\\n  .close[_ngcontent-%COMP%] {\\n    color: #aaa;\\n    float: right;\\n    font-size: 28px;\\n    font-weight: bold;\\n  }\\n  \\n  .close[_ngcontent-%COMP%]:hover, .close[_ngcontent-%COMP%]:focus {\\n    color: black;\\n    text-decoration: none;\\n    cursor: pointer;\\n  }\\n  \\n  \\n\\n  .modal-close[_ngcontent-%COMP%] {\\n    color: #aaaaaa;\\n    float: right;\\n    font-size: 25px;\\n    font-weight: bold;\\n  }\\n  \\n  .modal-close[_ngcontent-%COMP%]:hover, .modal-close[_ngcontent-%COMP%]:focus {\\n    color: #000;\\n    text-decoration: none;\\n    cursor: pointer;\\n  }\\n  \\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY3JlYXRlLWNoYXJhY3Rlci1tb2RhbC9jcmVhdGUtY2hhcmFjdGVyLW1vZGFsLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsaUNBQWlDO0FBQ2pDO0lBQ0ksYUFBYSxFQUFFLHNCQUFzQjtJQUNyQyxlQUFlLEVBQUUsa0JBQWtCO0lBQ25DLGFBQWEsRUFBRSxlQUFlO0lBQzlCLE9BQU87SUFDUCxNQUFNO0lBQ04sV0FBVyxFQUFFLGVBQWU7SUFDNUIsWUFBWSxFQUFFLGdCQUFnQjtJQUM5QixjQUFjLEVBQUUsNEJBQTRCO0lBQzVDLDhCQUE4QixFQUFFLG1CQUFtQjtJQUNuRCxvQ0FBb0MsRUFBRSxxQkFBcUI7RUFDN0Q7O0VBRUEsZ0NBQWdDO0VBQ2hDO0lBQ0Usa0JBQWtCO0lBQ2xCLHlCQUF5QjtJQUN6QixnQkFBZ0IsRUFBRSxrQ0FBa0M7SUFDcEQsYUFBYTtJQUNiLHNCQUFzQjtJQUN0QixVQUFVLEVBQUUsb0RBQW9EO0lBQ2hFLDBDQUEwQztJQUMxQywwQkFBMEI7SUFDMUIsd0JBQXdCO0VBQzFCOztFQUVBLGtCQUFrQjtFQUNsQjtJQUNFLE1BQU0sV0FBVyxFQUFFLFVBQVU7SUFDN0IsSUFBSSxNQUFNLEVBQUUsVUFBVTtFQUN4Qjs7RUFFQSwrQkFBK0I7RUFDL0I7SUFDRSxXQUFXO0lBQ1gsWUFBWTtJQUNaLGVBQWU7SUFDZixpQkFBaUI7RUFDbkI7O0VBRUE7O0lBRUUsWUFBWTtJQUNaLHFCQUFxQjtJQUNyQixlQUFlO0VBQ2pCOztFQUVBLHFCQUFxQjtFQUNyQjtJQUNFLGNBQWM7SUFDZCxZQUFZO0lBQ1osZUFBZTtJQUNmLGlCQUFpQjtFQUNuQjs7RUFFQTs7SUFFRSxXQUFXO0lBQ1gscUJBQXFCO0lBQ3JCLGVBQWU7RUFDakIiLCJzb3VyY2VzQ29udGVudCI6WyIvKiBTdHlsZSBmb3IgdGhlIG1vZGFsIGJhY2tkcm9wICovXG4ubW9kYWwge1xuICAgIGRpc3BsYXk6IG5vbmU7IC8qIEhpZGRlbiBieSBkZWZhdWx0ICovXG4gICAgcG9zaXRpb246IGZpeGVkOyAvKiBTdGF5IGluIHBsYWNlICovXG4gICAgei1pbmRleDogMTAwMDsgLyogU2l0IG9uIHRvcCAqL1xuICAgIGxlZnQ6IDA7XG4gICAgdG9wOiAwO1xuICAgIHdpZHRoOiAxMDAlOyAvKiBGdWxsIHdpZHRoICovXG4gICAgaGVpZ2h0OiAxMDAlOyAvKiBGdWxsIGhlaWdodCAqL1xuICAgIG92ZXJmbG93OiBhdXRvOyAvKiBFbmFibGUgc2Nyb2xsIGlmIG5lZWRlZCAqL1xuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYigwLCAwLCAwKTsgLyogRmFsbGJhY2sgY29sb3IgKi9cbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuNCk7IC8qIEJsYWNrIHcvIG9wYWNpdHkgKi9cbiAgfVxuICBcbiAgLyogU3R5bGUgZm9yIHRoZSBtb2RhbCBjb250ZW50ICovXG4gIC5tb2RhbC1jb250ZW50IHtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2ZlZmVmZTtcbiAgICBtYXJnaW46IDEwJSBhdXRvOyAvKiAxMCUgZnJvbSB0aGUgdG9wIGFuZCBjZW50ZXJlZCAqL1xuICAgIHBhZGRpbmc6IDIwcHg7XG4gICAgYm9yZGVyOiAxcHggc29saWQgIzg4ODtcbiAgICB3aWR0aDogODAlOyAvKiBDb3VsZCBiZSBtb3JlIG9yIGxlc3MsIGRlcGVuZGluZyBvbiBzY3JlZW4gc2l6ZSAqL1xuICAgIGJveC1zaGFkb3c6IDAgNHB4IDhweCAwIHJnYmEoMCwgMCwgMCwgMC4yKTtcbiAgICBhbmltYXRpb24tbmFtZTogYW5pbWF0ZXRvcDtcbiAgICBhbmltYXRpb24tZHVyYXRpb246IDAuNHM7XG4gIH1cbiAgXG4gIC8qIEFkZCBBbmltYXRpb24gKi9cbiAgQGtleWZyYW1lcyBhbmltYXRldG9wIHtcbiAgICBmcm9tIHt0b3A6IC0zMDBweDsgb3BhY2l0eTogMH1cbiAgICB0byB7dG9wOiAwOyBvcGFjaXR5OiAxfVxuICB9XG4gIFxuICAvKiBTdHlsZSBmb3IgdGhlIGNsb3NlIGJ1dHRvbiAqL1xuICAuY2xvc2Uge1xuICAgIGNvbG9yOiAjYWFhO1xuICAgIGZsb2F0OiByaWdodDtcbiAgICBmb250LXNpemU6IDI4cHg7XG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gIH1cbiAgXG4gIC5jbG9zZTpob3ZlcixcbiAgLmNsb3NlOmZvY3VzIHtcbiAgICBjb2xvcjogYmxhY2s7XG4gICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgfVxuICBcbiAgLyogVGhlIENsb3NlIEJ1dHRvbiAqL1xuICAubW9kYWwtY2xvc2Uge1xuICAgIGNvbG9yOiAjYWFhYWFhO1xuICAgIGZsb2F0OiByaWdodDtcbiAgICBmb250LXNpemU6IDI1cHg7XG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gIH1cbiAgXG4gIC5tb2RhbC1jbG9zZTpob3ZlcixcbiAgLm1vZGFsLWNsb3NlOmZvY3VzIHtcbiAgICBjb2xvcjogIzAwMDtcbiAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gICAgY3Vyc29yOiBwb2ludGVyO1xuICB9XG4gICJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n  });\n}","map":{"version":3,"names":["FormGroup","FormControl","Validators","i0","ɵɵelementStart","ɵɵlistener","CreateCharacterModalComponent_div_0_Template_form_ngSubmit_2_listener","ɵɵrestoreView","_r2","ctx_r1","ɵɵnextContext","ɵɵresetView","onSubmit","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵadvance","ɵɵproperty","ctx_r0","characterForm","valid","CreateCharacterModalComponent","constructor","characterService","name","required","description","imageUrl","createCharacter","value","subscribe","response","console","log","error","_","ɵɵdirectiveInject","i1","CharacterService","_2","selectors","decls","vars","consts","template","CreateCharacterModalComponent_Template","rf","ctx","ɵɵtemplate","CreateCharacterModalComponent_div_0_Template","isModalOpen"],"sources":["/Users/alex/Documents/Programs/SwordInStone/Frontend/src/app/create-character-modal/create-character-modal.component.ts","/Users/alex/Documents/Programs/SwordInStone/Frontend/src/app/create-character-modal/create-character-modal.component.html"],"sourcesContent":["import { Component, EventEmitter, Output, Input } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { CharacterService } from '../services/character.service'; // Adjust the import path as needed\n\n@Component({\n  selector: 'app-create-character-modal',\n  templateUrl: './create-character-modal.component.html',\n  styleUrls: ['./create-character-modal.component.css']\n})\nexport class CreateCharacterModalComponent {\n  // The isModalOpen property should be public to be accessible from the template\n\n  \n  characterForm = new FormGroup({\n    name: new FormControl('', Validators.required),\n    description: new FormControl('', Validators.required),\n    imageUrl: new FormControl('', Validators.required)\n  });\n\n  // Make sure to import and inject the CharacterService correctly\n  constructor(private characterService: CharacterService) {}\n\n  // The onSubmit method\n  onSubmit(): void {\n    if (this.characterForm.valid) {\n      this.characterService.createCharacter(this.characterForm.value).subscribe(\n        response => {\n          console.log('Character created:', response);\n        },\n        error => {\n          console.error('Error creating character:', error);\n        }\n      );\n    }\n  }\n}\n","<!-- create-character-modal.component.html -->\n<div class=\"modal\" *ngIf=\"isModalOpen\">\n    <div class=\"modal-content\">\n      <!-- <span class=\"close\" (click)=\"closeModal()\">&times;</span> -->\n      <form [formGroup]=\"characterForm\" (ngSubmit)=\"onSubmit()\">\n        <div class=\"form-group\">\n          <label for=\"characterName\">Character Name:</label>\n          <input type=\"text\" id=\"characterName\" formControlName=\"name\" class=\"form-control\" placeholder=\"Enter character name\">\n        </div>\n  \n        <div class=\"form-group\">\n          <label for=\"characterDescription\">Character Description:</label>\n          <textarea id=\"characterDescription\" formControlName=\"description\" class=\"form-control\" rows=\"3\" placeholder=\"Enter character description\"></textarea>\n        </div>\n  \n        <div class=\"form-group\">\n          <label for=\"imageURL\">Image URL:</label>\n          <input type=\"text\" id=\"imageURL\" formControlName=\"imageUrl\" class=\"form-control\" placeholder=\"Enter image URL\">\n        </div>\n  \n        <button type=\"submit\" class=\"btn btn-primary\" [disabled]=\"!characterForm.valid\">Create Character</button>\n      </form>\n    </div>\n  </div>\n  "],"mappings":"AACA,SAASA,SAAS,EAAEC,WAAW,EAAEC,UAAU,QAAQ,gBAAgB;;;;;;;;ICAnEC,EAAA,CAAAC,cAAA,aAAuC;IAGCD,EAAA,CAAAE,UAAA,sBAAAC,sEAAA;MAAAH,EAAA,CAAAI,aAAA,CAAAC,GAAA;MAAA,MAAAC,MAAA,GAAAN,EAAA,CAAAO,aAAA;MAAA,OAAYP,EAAA,CAAAQ,WAAA,CAAAF,MAAA,CAAAG,QAAA,EAAU;IAAA,EAAC;IACvDT,EAAA,CAAAC,cAAA,aAAwB;IACKD,EAAA,CAAAU,MAAA,sBAAe;IAAAV,EAAA,CAAAW,YAAA,EAAQ;IAClDX,EAAA,CAAAY,SAAA,eAAqH;IACvHZ,EAAA,CAAAW,YAAA,EAAM;IAENX,EAAA,CAAAC,cAAA,aAAwB;IACYD,EAAA,CAAAU,MAAA,6BAAsB;IAAAV,EAAA,CAAAW,YAAA,EAAQ;IAChEX,EAAA,CAAAY,SAAA,mBAAqJ;IACvJZ,EAAA,CAAAW,YAAA,EAAM;IAENX,EAAA,CAAAC,cAAA,cAAwB;IACAD,EAAA,CAAAU,MAAA,kBAAU;IAAAV,EAAA,CAAAW,YAAA,EAAQ;IACxCX,EAAA,CAAAY,SAAA,iBAA+G;IACjHZ,EAAA,CAAAW,YAAA,EAAM;IAENX,EAAA,CAAAC,cAAA,kBAAgF;IAAAD,EAAA,CAAAU,MAAA,wBAAgB;IAAAV,EAAA,CAAAW,YAAA,EAAS;;;;IAhBrGX,EAAA,CAAAa,SAAA,GAA2B;IAA3Bb,EAAA,CAAAc,UAAA,cAAAC,MAAA,CAAAC,aAAA,CAA2B;IAgBehB,EAAA,CAAAa,SAAA,IAAiC;IAAjCb,EAAA,CAAAc,UAAA,cAAAC,MAAA,CAAAC,aAAA,CAAAC,KAAA,CAAiC;;;ADXvF,OAAM,MAAOC,6BAA6B;EAUxC;EACAC,YAAoBC,gBAAkC;IAAlC,KAAAA,gBAAgB,GAAhBA,gBAAgB;IAVpC;IAGA,KAAAJ,aAAa,GAAG,IAAInB,SAAS,CAAC;MAC5BwB,IAAI,EAAE,IAAIvB,WAAW,CAAC,EAAE,EAAEC,UAAU,CAACuB,QAAQ,CAAC;MAC9CC,WAAW,EAAE,IAAIzB,WAAW,CAAC,EAAE,EAAEC,UAAU,CAACuB,QAAQ,CAAC;MACrDE,QAAQ,EAAE,IAAI1B,WAAW,CAAC,EAAE,EAAEC,UAAU,CAACuB,QAAQ;KAClD,CAAC;EAGuD;EAEzD;EACAb,QAAQA,CAAA;IACN,IAAI,IAAI,CAACO,aAAa,CAACC,KAAK,EAAE;MAC5B,IAAI,CAACG,gBAAgB,CAACK,eAAe,CAAC,IAAI,CAACT,aAAa,CAACU,KAAK,CAAC,CAACC,SAAS,CACvEC,QAAQ,IAAG;QACTC,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEF,QAAQ,CAAC;MAC7C,CAAC,EACDG,KAAK,IAAG;QACNF,OAAO,CAACE,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;MACnD,CAAC,CACF;;EAEL;EAAC,QAAAC,CAAA,G;qBAzBUd,6BAA6B,EAAAlB,EAAA,CAAAiC,iBAAA,CAAAC,EAAA,CAAAC,gBAAA;EAAA;EAAA,QAAAC,EAAA,G;UAA7BlB,6BAA6B;IAAAmB,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,uCAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCR1C3C,EAAA,CAAA6C,UAAA,IAAAC,4CAAA,kBAsBQ;;;QAtBY9C,EAAA,CAAAc,UAAA,SAAA8B,GAAA,CAAAG,WAAA,CAAiB"},"metadata":{},"sourceType":"module","externalDependencies":[]}
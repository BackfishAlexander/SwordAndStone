{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, Input } from '@angular/core';\nexport let CharacterListComponent = class CharacterListComponent {\n  constructor(route, campaignService, cookieServi) {\n    this.route = route;\n    this.campaignService = campaignService;\n    this.cookieServi = cookieServi;\n    this.isCreateCharacterModalOpen = false;\n    this.type = \"none\";\n  }\n  openCreateCharacterModal() {\n    console.log('Opening modal');\n    this.isCreateCharacterModalOpen = true;\n    // this.cd.detectChanges();\n  }\n\n  closeCreateCharacterModal() {\n    console.log('Closing modal');\n    this.isCreateCharacterModalOpen = false;\n    // this.cd.detectChanges();\n  }\n\n  ngOnInit() {\n    console.log(\"Initializing character list of type: \" + this.type);\n    if (this.type.toLowerCase().includes(\"campaign\")) {\n      this.route.params.subscribe(params => {\n        this.campaignId = params['id']; // Get the id from the route parameter\n        this.campaignService.getCampaign(this.campaignId).subscribe(data => {\n          // Sort player characters by name in alphabetical order\n          if (data.playerCharacters) {\n            data.playerCharacters.sort((a, b) => a.characterName.localeCompare(b.characterName));\n          }\n          this.campaign = data;\n        }, error => {\n          console.error('Error fetching campaign data:', error);\n        });\n      });\n    } else if (this.type.toLowerCase().includes(\"player\")) {\n      this.route.params.subscribe(params => {\n        this.username = this.cookieService.get('username'); // Get the id from the route parameter\n        this.campaignService.getCampaign(this.campaignId).subscribe(data => {\n          // Sort player characters by name in alphabetical order\n          if (data.playerCharacters) {\n            data.playerCharacters.sort((a, b) => a.characterName.localeCompare(b.characterName));\n          }\n          this.campaign = data;\n        }, error => {\n          console.error('Error fetching campaign data:', error);\n        });\n      });\n    }\n  }\n};\n__decorate([Input()], CharacterListComponent.prototype, \"type\", void 0);\nCharacterListComponent = __decorate([Component({\n  selector: 'app-character-list',\n  templateUrl: './character-list.component.html',\n  styleUrls: ['./character-list.component.css']\n})], CharacterListComponent);","map":{"version":3,"names":["Component","Input","CharacterListComponent","constructor","route","campaignService","cookieServi","isCreateCharacterModalOpen","type","openCreateCharacterModal","console","log","closeCreateCharacterModal","ngOnInit","toLowerCase","includes","params","subscribe","campaignId","getCampaign","data","playerCharacters","sort","a","b","characterName","localeCompare","campaign","error","username","cookieService","get","__decorate","selector","templateUrl","styleUrls"],"sources":["/Users/alex/Documents/Programs/SwordInStone/Frontend/src/app/character-list/character-list.component.ts"],"sourcesContent":["import { CampaignService } from './../services/campaign.service';\nimport { Component, OnInit, Input } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { PlayerCharacter } from '../DTOs/PlayerCharacter';\n\n@Component({\n  selector: 'app-character-list',\n  templateUrl: './character-list.component.html',\n  styleUrls: ['./character-list.component.css']\n})\nexport class CharacterListComponent implements OnInit {\n  campaign: any;\n  username: any;\n  campaignId: any;\n  isCreateCharacterModalOpen: boolean = false;\n  @Input() type: string = \"none\";\n\n  constructor(\n    private route: ActivatedRoute,\n    private campaignService: CampaignService,\n    private cookieServi\n        ) \n        {}\n\n  openCreateCharacterModal(): void {\n    console.log('Opening modal');\n    this.isCreateCharacterModalOpen = true;\n    // this.cd.detectChanges();\n  }\n\n  closeCreateCharacterModal(): void {\n    console.log('Closing modal');\n    this.isCreateCharacterModalOpen = false;\n    // this.cd.detectChanges();\n  }\n\n  ngOnInit(): void {\n    console.log(\"Initializing character list of type: \" + this.type);\n    if (this.type.toLowerCase().includes(\"campaign\")){\n      this.route.params.subscribe(params => {\n        this.campaignId = params['id']; // Get the id from the route parameter\n        this.campaignService.getCampaign(this.campaignId).subscribe(\n          (data) => {\n            // Sort player characters by name in alphabetical order\n            if (data.playerCharacters) {\n              data.playerCharacters.sort((a: PlayerCharacter, b: PlayerCharacter) => a.characterName.localeCompare(b.characterName));\n            }\n            this.campaign = data;\n          },\n          (error) => {\n            console.error('Error fetching campaign data:', error);\n          }\n        );\n      });\n    }\n    else if (this.type.toLowerCase().includes(\"player\")) { \n      this.route.params.subscribe(params => {\n        this.username = this.cookieService.get('username'); // Get the id from the route parameter\n        this.campaignService.getCampaign(this.campaignId).subscribe(\n          (data) => {\n            // Sort player characters by name in alphabetical order\n            if (data.playerCharacters) {\n              data.playerCharacters.sort((a: PlayerCharacter, b: PlayerCharacter) => a.characterName.localeCompare(b.characterName));\n            }\n            this.campaign = data;\n          },\n          (error) => {\n            console.error('Error fetching campaign data:', error);\n          }\n        );\n      });\n    }\n  }\n\n}\n"],"mappings":";AACA,SAASA,SAAS,EAAUC,KAAK,QAAQ,eAAe;AASjD,WAAMC,sBAAsB,GAA5B,MAAMA,sBAAsB;EAOjCC,YACUC,KAAqB,EACrBC,eAAgC,EAChCC,WAAW;IAFX,KAAAF,KAAK,GAALA,KAAK;IACL,KAAAC,eAAe,GAAfA,eAAe;IACf,KAAAC,WAAW,GAAXA,WAAW;IANrB,KAAAC,0BAA0B,GAAY,KAAK;IAClC,KAAAC,IAAI,GAAW,MAAM;EAOvB;EAEPC,wBAAwBA,CAAA;IACtBC,OAAO,CAACC,GAAG,CAAC,eAAe,CAAC;IAC5B,IAAI,CAACJ,0BAA0B,GAAG,IAAI;IACtC;EACF;;EAEAK,yBAAyBA,CAAA;IACvBF,OAAO,CAACC,GAAG,CAAC,eAAe,CAAC;IAC5B,IAAI,CAACJ,0BAA0B,GAAG,KAAK;IACvC;EACF;;EAEAM,QAAQA,CAAA;IACNH,OAAO,CAACC,GAAG,CAAC,uCAAuC,GAAG,IAAI,CAACH,IAAI,CAAC;IAChE,IAAI,IAAI,CAACA,IAAI,CAACM,WAAW,EAAE,CAACC,QAAQ,CAAC,UAAU,CAAC,EAAC;MAC/C,IAAI,CAACX,KAAK,CAACY,MAAM,CAACC,SAAS,CAACD,MAAM,IAAG;QACnC,IAAI,CAACE,UAAU,GAAGF,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;QAChC,IAAI,CAACX,eAAe,CAACc,WAAW,CAAC,IAAI,CAACD,UAAU,CAAC,CAACD,SAAS,CACxDG,IAAI,IAAI;UACP;UACA,IAAIA,IAAI,CAACC,gBAAgB,EAAE;YACzBD,IAAI,CAACC,gBAAgB,CAACC,IAAI,CAAC,CAACC,CAAkB,EAAEC,CAAkB,KAAKD,CAAC,CAACE,aAAa,CAACC,aAAa,CAACF,CAAC,CAACC,aAAa,CAAC,CAAC;;UAExH,IAAI,CAACE,QAAQ,GAAGP,IAAI;QACtB,CAAC,EACAQ,KAAK,IAAI;UACRlB,OAAO,CAACkB,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;QACvD,CAAC,CACF;MACH,CAAC,CAAC;KACH,MACI,IAAI,IAAI,CAACpB,IAAI,CAACM,WAAW,EAAE,CAACC,QAAQ,CAAC,QAAQ,CAAC,EAAE;MACnD,IAAI,CAACX,KAAK,CAACY,MAAM,CAACC,SAAS,CAACD,MAAM,IAAG;QACnC,IAAI,CAACa,QAAQ,GAAG,IAAI,CAACC,aAAa,CAACC,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC;QACpD,IAAI,CAAC1B,eAAe,CAACc,WAAW,CAAC,IAAI,CAACD,UAAU,CAAC,CAACD,SAAS,CACxDG,IAAI,IAAI;UACP;UACA,IAAIA,IAAI,CAACC,gBAAgB,EAAE;YACzBD,IAAI,CAACC,gBAAgB,CAACC,IAAI,CAAC,CAACC,CAAkB,EAAEC,CAAkB,KAAKD,CAAC,CAACE,aAAa,CAACC,aAAa,CAACF,CAAC,CAACC,aAAa,CAAC,CAAC;;UAExH,IAAI,CAACE,QAAQ,GAAGP,IAAI;QACtB,CAAC,EACAQ,KAAK,IAAI;UACRlB,OAAO,CAACkB,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;QACvD,CAAC,CACF;MACH,CAAC,CAAC;;EAEN;CAED;AA3DUI,UAAA,EAAR/B,KAAK,EAAE,C,mDAAuB;AALpBC,sBAAsB,GAAA8B,UAAA,EALlChC,SAAS,CAAC;EACTiC,QAAQ,EAAE,oBAAoB;EAC9BC,WAAW,EAAE,iCAAiC;EAC9CC,SAAS,EAAE,CAAC,gCAAgC;CAC7C,CAAC,C,EACWjC,sBAAsB,CAgElC"},"metadata":{},"sourceType":"module","externalDependencies":[]}
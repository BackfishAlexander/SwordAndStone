{"ast":null,"code":"import { AuthenticationService } from './authentication.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"./authentication.service\";\nexport class CampaignService {\n  constructor(http, auth) {\n    this.http = http;\n    this.baseUrl = 'http://localhost:8080/private/campaign/view/';\n    this.playerCList = 'http://localhost:8080/private/user/playerlist/';\n  }\n  getCampaign(id) {\n    return this.http.get(`${this.baseUrl}${id}`, {\n      headers: AuthenticationService.get\n    });\n  }\n  getUserPlayers(id) {\n    return this.http.get(`${this.playerCList}${id}`);\n  }\n  static #_ = this.ɵfac = function CampaignService_Factory(t) {\n    return new (t || CampaignService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.AuthenticationService));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: CampaignService,\n    factory: CampaignService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["AuthenticationService","CampaignService","constructor","http","auth","baseUrl","playerCList","getCampaign","id","get","headers","getUserPlayers","_","i0","ɵɵinject","i1","HttpClient","i2","_2","factory","ɵfac","providedIn"],"sources":["/Users/alex/Documents/Programs/SwordInStone/Frontend/src/app/services/campaign.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { AuthenticationService } from './authentication.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CampaignService {\n  private baseUrl = 'http://localhost:8080/private/campaign/view/';\n  private playerCList = 'http://localhost:8080/private/user/playerlist/';\n\n  constructor(private http: HttpClient, auth: AuthenticationService) {\n  }\n\n  getCampaign(id: string): Observable<any> {\n    return this.http.get(`${this.baseUrl}${id}`, {headers: AuthenticationService.get});\n  }\n  \n  getUserPlayers(id: string): Observable<any> {\n    return this.http.get(`${this.playerCList}${id}`);\n  }\n}\n"],"mappings":"AAGA,SAASA,qBAAqB,QAAQ,0BAA0B;;;;AAKhE,OAAM,MAAOC,eAAe;EAI1BC,YAAoBC,IAAgB,EAAEC,IAA2B;IAA7C,KAAAD,IAAI,GAAJA,IAAI;IAHhB,KAAAE,OAAO,GAAG,8CAA8C;IACxD,KAAAC,WAAW,GAAG,gDAAgD;EAGtE;EAEAC,WAAWA,CAACC,EAAU;IACpB,OAAO,IAAI,CAACL,IAAI,CAACM,GAAG,CAAC,GAAG,IAAI,CAACJ,OAAO,GAAGG,EAAE,EAAE,EAAE;MAACE,OAAO,EAAEV,qBAAqB,CAACS;IAAG,CAAC,CAAC;EACpF;EAEAE,cAAcA,CAACH,EAAU;IACvB,OAAO,IAAI,CAACL,IAAI,CAACM,GAAG,CAAC,GAAG,IAAI,CAACH,WAAW,GAAGE,EAAE,EAAE,CAAC;EAClD;EAAC,QAAAI,CAAA,G;qBAbUX,eAAe,EAAAY,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAjB,qBAAA;EAAA;EAAA,QAAAkB,EAAA,G;WAAfjB,eAAe;IAAAkB,OAAA,EAAflB,eAAe,CAAAmB,IAAA;IAAAC,UAAA,EAFd;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}
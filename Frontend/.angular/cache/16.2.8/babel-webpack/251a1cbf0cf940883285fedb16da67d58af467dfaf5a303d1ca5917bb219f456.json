{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/character.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction CreateCharacterModalComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r2 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 1)(1, \"div\", 2)(2, \"span\", 3);\n    i0.ɵɵlistener(\"click\", function CreateCharacterModalComponent_div_0_Template_span_click_2_listener() {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.closeModal());\n    });\n    i0.ɵɵtext(3, \"\\u00D7\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"form\", 4);\n    i0.ɵɵlistener(\"ngSubmit\", function CreateCharacterModalComponent_div_0_Template_form_ngSubmit_4_listener() {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.onSubmit());\n    });\n    i0.ɵɵelementStart(5, \"div\", 5)(6, \"label\", 6);\n    i0.ɵɵtext(7, \"Character Name:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(8, \"input\", 7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"div\", 5)(10, \"label\", 8);\n    i0.ɵɵtext(11, \"Character Description:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(12, \"textarea\", 9);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"div\", 5)(14, \"label\", 10);\n    i0.ɵɵtext(15, \"Image URL:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(16, \"input\", 11);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(17, \"button\", 12);\n    i0.ɵɵtext(18, \"Create Character\");\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"formGroup\", ctx_r0.characterForm);\n    i0.ɵɵadvance(13);\n    i0.ɵɵproperty(\"disabled\", !ctx_r0.characterForm.valid);\n  }\n}\nexport class CreateCharacterModalComponent {\n  // Make sure to import and inject the CharacterService correctly\n  constructor(characterService) {\n    this.characterService = characterService;\n    // The isModalOpen property should be public to be accessible from the template\n    this.isModalOpen = false;\n    this.close = new EventEmitter();\n    this.characterForm = new FormGroup({\n      name: new FormControl('', Validators.required),\n      description: new FormControl('', Validators.required),\n      imageUrl: new FormControl('', Validators.required)\n    });\n  }\n  // The onSubmit method\n  onSubmit() {\n    if (this.characterForm.valid) {\n      this.characterService.createCharacter(this.characterForm.value).subscribe(response => {\n        console.log('Character created:', response);\n        this.closeModal(); // Close the modal on success\n      }, error => {\n        console.error('Error creating character:', error);\n      });\n    }\n  }\n  // The closeModal method must be public and should be declared like this\n  closeModal() {\n    this.isModalOpen = false;\n  }\n  static #_ = this.ɵfac = function CreateCharacterModalComponent_Factory(t) {\n    return new (t || CreateCharacterModalComponent)(i0.ɵɵdirectiveInject(i1.CharacterService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CreateCharacterModalComponent,\n    selectors: [[\"app-create-character-modal\"]],\n    decls: 1,\n    vars: 1,\n    consts: [[\"class\", \"modal\", 4, \"ngIf\"], [1, \"modal\"], [1, \"modal-content\"], [1, \"close\", 3, \"click\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\"], [\"for\", \"characterName\"], [\"type\", \"text\", \"id\", \"characterName\", \"formControlName\", \"name\", \"placeholder\", \"Enter character name\", 1, \"form-control\"], [\"for\", \"characterDescription\"], [\"id\", \"characterDescription\", \"formControlName\", \"description\", \"rows\", \"3\", \"placeholder\", \"Enter character description\", 1, \"form-control\"], [\"for\", \"imageURL\"], [\"type\", \"text\", \"id\", \"imageURL\", \"formControlName\", \"imageUrl\", \"placeholder\", \"Enter image URL\", 1, \"form-control\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 3, \"disabled\"]],\n    template: function CreateCharacterModalComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, CreateCharacterModalComponent_div_0_Template, 19, 2, \"div\", 0);\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", ctx.isModalOpen);\n      }\n    },\n    dependencies: [i2.NgIf, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.FormGroupDirective, i3.FormControlName],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}\n__decorate([Output()], CreateCharacterModalComponent.prototype, \"close\", void 0);","map":{"version":3,"names":["FormGroup","FormControl","Validators","i0","ɵɵelementStart","ɵɵlistener","CreateCharacterModalComponent_div_0_Template_span_click_2_listener","ɵɵrestoreView","_r2","ctx_r1","ɵɵnextContext","ɵɵresetView","closeModal","ɵɵtext","ɵɵelementEnd","CreateCharacterModalComponent_div_0_Template_form_ngSubmit_4_listener","ctx_r3","onSubmit","ɵɵelement","ɵɵadvance","ɵɵproperty","ctx_r0","characterForm","valid","CreateCharacterModalComponent","constructor","characterService","isModalOpen","close","EventEmitter","name","required","description","imageUrl","createCharacter","value","subscribe","response","console","log","error","_","ɵɵdirectiveInject","i1","CharacterService","_2","selectors","decls","vars","consts","template","CreateCharacterModalComponent_Template","rf","ctx","ɵɵtemplate","CreateCharacterModalComponent_div_0_Template","__decorate","Output"],"sources":["/Users/alex/Documents/Programs/SwordInStone/Frontend/src/app/create-character-modal/create-character-modal.component.ts","/Users/alex/Documents/Programs/SwordInStone/Frontend/src/app/create-character-modal/create-character-modal.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { CharacterService } from '../services/character.service'; // Adjust the import path as needed\n\n@Component({\n  selector: 'app-create-character-modal',\n  templateUrl: './create-character-modal.component.html',\n  styleUrls: ['./create-character-modal.component.css']\n})\nexport class CreateCharacterModalComponent {\n  // The isModalOpen property should be public to be accessible from the template\n  public isModalOpen = false;\n\n  @Output() close = new EventEmitter<void>();\n  \n  characterForm = new FormGroup({\n    name: new FormControl('', Validators.required),\n    description: new FormControl('', Validators.required),\n    imageUrl: new FormControl('', Validators.required)\n  });\n\n  // Make sure to import and inject the CharacterService correctly\n  constructor(private characterService: CharacterService) {}\n\n  // The onSubmit method\n  onSubmit(): void {\n    if (this.characterForm.valid) {\n      this.characterService.createCharacter(this.characterForm.value).subscribe(\n        response => {\n          console.log('Character created:', response);\n          this.closeModal(); // Close the modal on success\n        },\n        error => {\n          console.error('Error creating character:', error);\n        }\n      );\n    }\n  }\n\n  // The closeModal method must be public and should be declared like this\n  public closeModal(): void {\n    this.isModalOpen = false;\n  }\n}\n","<!-- create-character-modal.component.html -->\n<div class=\"modal\" *ngIf=\"isModalOpen\">\n    <div class=\"modal-content\">\n      <span class=\"close\" (click)=\"closeModal()\">&times;</span>\n      <form [formGroup]=\"characterForm\" (ngSubmit)=\"onSubmit()\">\n        <div class=\"form-group\">\n          <label for=\"characterName\">Character Name:</label>\n          <input type=\"text\" id=\"characterName\" formControlName=\"name\" class=\"form-control\" placeholder=\"Enter character name\">\n        </div>\n  \n        <div class=\"form-group\">\n          <label for=\"characterDescription\">Character Description:</label>\n          <textarea id=\"characterDescription\" formControlName=\"description\" class=\"form-control\" rows=\"3\" placeholder=\"Enter character description\"></textarea>\n        </div>\n  \n        <div class=\"form-group\">\n          <label for=\"imageURL\">Image URL:</label>\n          <input type=\"text\" id=\"imageURL\" formControlName=\"imageUrl\" class=\"form-control\" placeholder=\"Enter image URL\">\n        </div>\n  \n        <button type=\"submit\" class=\"btn btn-primary\" [disabled]=\"!characterForm.valid\">Create Character</button>\n      </form>\n    </div>\n  </div>\n  "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import { Subject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nexport class NotificationService {\n  constructor() {\n    this.notificationSubject = new Subject();\n    this.notifications = this.notificationSubject.asObservable();\n  }\n  show(message, type, duration) {\n    this.notificationSubject.next({\n      message,\n      type,\n      duration\n    });\n  }\n  static #_ = this.ɵfac = function NotificationService_Factory(t) {\n    return new (t || NotificationService)();\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: NotificationService,\n    factory: NotificationService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["Subject","NotificationService","constructor","notificationSubject","notifications","asObservable","show","message","type","duration","next","_","_2","factory","ɵfac","providedIn"],"sources":["/Users/alex/Documents/Programs/SwordInStone/Frontend/src/app/notification.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\n\nexport interface Notification {\n  message: string;\n  type: 'success' | 'error' | 'info';\n  duration?: number;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NotificationService {\n  private notificationSubject = new Subject<Notification>();\n  public notifications = this.notificationSubject.asObservable();\n\n  constructor() { }\n\n  show(message: string, type: 'success' | 'error' | 'info', duration?: number) {\n    this.notificationSubject.next({ message, type, duration });\n  }\n}\n"],"mappings":"AACA,SAASA,OAAO,QAAQ,MAAM;;AAW9B,OAAM,MAAOC,mBAAmB;EAI9BC,YAAA;IAHQ,KAAAC,mBAAmB,GAAG,IAAIH,OAAO,EAAgB;IAClD,KAAAI,aAAa,GAAG,IAAI,CAACD,mBAAmB,CAACE,YAAY,EAAE;EAE9C;EAEhBC,IAAIA,CAACC,OAAe,EAAEC,IAAkC,EAAEC,QAAiB;IACzE,IAAI,CAACN,mBAAmB,CAACO,IAAI,CAAC;MAAEH,OAAO;MAAEC,IAAI;MAAEC;IAAQ,CAAE,CAAC;EAC5D;EAAC,QAAAE,CAAA,G;qBARUV,mBAAmB;EAAA;EAAA,QAAAW,EAAA,G;WAAnBX,mBAAmB;IAAAY,OAAA,EAAnBZ,mBAAmB,CAAAa,IAAA;IAAAC,UAAA,EAFlB;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}
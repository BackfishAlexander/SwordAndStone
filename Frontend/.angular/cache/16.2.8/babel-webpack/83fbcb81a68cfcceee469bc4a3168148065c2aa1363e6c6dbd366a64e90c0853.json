{"ast":null,"code":"import { FormGroup, FormControl, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/character.service\";\nexport class CreateCharacterModalComponent {\n  constructor(characterService) {\n    this.characterService = characterService;\n    this.characterForm = new FormGroup({\n      name: new FormControl('', Validators.required),\n      description: new FormControl('', Validators.required),\n      imageUrl: new FormControl('', Validators.required)\n    });\n  }\n  onSubmit() {\n    if (this.characterForm.valid) {\n      this.characterService.createCharacter(this.characterForm.value).subscribe(response => {\n        // Handle response\n        console.log(response);\n        this.close(); // Close the modal\n      }, error => {\n        // Handle error\n        console.error('Error creating character:', error);\n      });\n    }\n  }\n  close() {\n    // Logic to close the modal\n  }\n  static #_ = this.ɵfac = function CreateCharacterModalComponent_Factory(t) {\n    return new (t || CreateCharacterModalComponent)(i0.ɵɵdirectiveInject(i1.CharacterService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CreateCharacterModalComponent,\n    selectors: [[\"app-create-character-modal\"]],\n    decls: 2,\n    vars: 0,\n    template: function CreateCharacterModalComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"p\");\n        i0.ɵɵtext(1, \"create-character-modal works!\");\n        i0.ɵɵelementEnd();\n      }\n    },\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["FormGroup","FormControl","Validators","CreateCharacterModalComponent","constructor","characterService","characterForm","name","required","description","imageUrl","onSubmit","valid","createCharacter","value","subscribe","response","console","log","close","error","_","i0","ɵɵdirectiveInject","i1","CharacterService","_2","selectors","decls","vars","template","CreateCharacterModalComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd"],"sources":["/Users/alex/Documents/Programs/SwordInStone/Frontend/src/app/create-character-modal/create-character-modal.component.ts","/Users/alex/Documents/Programs/SwordInStone/Frontend/src/app/create-character-modal/create-character-modal.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { CharacterService } from '../services/character.service'; // Import your character creation service\n\n@Component({\n  selector: 'app-create-character-modal',\n  templateUrl: './create-character-modal.component.html',\n  styleUrls: ['./create-character-modal.component.css']\n})\nexport class CreateCharacterModalComponent {\n  characterForm = new FormGroup({\n    name: new FormControl('', Validators.required),\n    description: new FormControl('', Validators.required),\n    imageUrl: new FormControl('', Validators.required)\n  });\n\n  constructor(private characterService: CharacterService) {}\n\n  onSubmit(): void {\n    if (this.characterForm.valid) {\n      this.characterService.createCharacter(this.characterForm.value).subscribe(\n        response => {\n          // Handle response\n          console.log(response);\n          this.close(); // Close the modal\n        },\n        error => {\n          // Handle error\n          console.error('Error creating character:', error);\n        }\n      );\n    }\n  }\n\n  close(): void {\n    // Logic to close the modal\n  }\n}\n","<p>create-character-modal works!</p>\n"],"mappings":"AACA,SAASA,SAAS,EAAEC,WAAW,EAAEC,UAAU,QAAQ,gBAAgB;;;AAQnE,OAAM,MAAOC,6BAA6B;EAOxCC,YAAoBC,gBAAkC;IAAlC,KAAAA,gBAAgB,GAAhBA,gBAAgB;IANpC,KAAAC,aAAa,GAAG,IAAIN,SAAS,CAAC;MAC5BO,IAAI,EAAE,IAAIN,WAAW,CAAC,EAAE,EAAEC,UAAU,CAACM,QAAQ,CAAC;MAC9CC,WAAW,EAAE,IAAIR,WAAW,CAAC,EAAE,EAAEC,UAAU,CAACM,QAAQ,CAAC;MACrDE,QAAQ,EAAE,IAAIT,WAAW,CAAC,EAAE,EAAEC,UAAU,CAACM,QAAQ;KAClD,CAAC;EAEuD;EAEzDG,QAAQA,CAAA;IACN,IAAI,IAAI,CAACL,aAAa,CAACM,KAAK,EAAE;MAC5B,IAAI,CAACP,gBAAgB,CAACQ,eAAe,CAAC,IAAI,CAACP,aAAa,CAACQ,KAAK,CAAC,CAACC,SAAS,CACvEC,QAAQ,IAAG;QACT;QACAC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAAC;QACrB,IAAI,CAACG,KAAK,EAAE,CAAC,CAAC;MAChB,CAAC,EACDC,KAAK,IAAG;QACN;QACAH,OAAO,CAACG,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;MACnD,CAAC,CACF;;EAEL;EAEAD,KAAKA,CAAA;IACH;EAAA;EACD,QAAAE,CAAA,G;qBA3BUlB,6BAA6B,EAAAmB,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,gBAAA;EAAA;EAAA,QAAAC,EAAA,G;UAA7BvB,6BAA6B;IAAAwB,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,QAAA,WAAAC,uCAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCT1CV,EAAA,CAAAY,cAAA,QAAG;QAAAZ,EAAA,CAAAa,MAAA,oCAA6B;QAAAb,EAAA,CAAAc,YAAA,EAAI"},"metadata":{},"sourceType":"module","externalDependencies":[]}
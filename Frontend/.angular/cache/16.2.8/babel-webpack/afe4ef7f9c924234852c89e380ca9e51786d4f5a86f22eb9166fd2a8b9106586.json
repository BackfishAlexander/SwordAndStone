{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/router\";\nexport class AuthenticationService {\n  constructor(http, router) {\n    this.http = http;\n    this.router = router;\n    this.headers = \"\";\n  }\n  login(username, password) {\n    const payload = {\n      username: username,\n      password: password\n    };\n    return new Promise((resolve, reject) => {\n      this.http.post('http://localhost:8080/login', payload, {\n        responseType: 'json'\n      }).subscribe(response => {\n        console.log('Login successful!', response);\n        this.setToken(response.token);\n        resolve(true);\n      }, error => {\n        console.error('Login failed!', error);\n        reject(false);\n      });\n    });\n  }\n  register(username, password) {\n    const payload = {\n      username: username,\n      password: password\n    };\n    return new Promisethis.http.post('http://localhost:8080/register', payload, {\n      responseType: 'json'\n    }).subscribe(response => {\n      console.log('Registration successful!', response);\n      this.setToken(response.token);\n      return true;\n    }, error => {\n      console.error('Registration failed!', error);\n    });\n    return false;\n  }\n  getToken() {\n    return localStorage.getItem('token');\n  }\n  isLoggedIn() {\n    return this.getToken() !== \"\";\n  }\n  logout() {\n    this.setToken(\"\");\n    this.router.navigate(['/login']);\n  }\n  setToken(token) {\n    localStorage.setItem('token', token);\n  }\n  getHeaders() {\n    return new HttpHeaders().set('Authorization', `Bearer ${this.getToken()}`);\n  }\n  static #_ = this.ɵfac = function AuthenticationService_Factory(t) {\n    return new (t || AuthenticationService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.Router));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthenticationService,\n    factory: AuthenticationService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["HttpHeaders","AuthenticationService","constructor","http","router","headers","login","username","password","payload","Promise","resolve","reject","post","responseType","subscribe","response","console","log","setToken","token","error","register","Promisethis","getToken","localStorage","getItem","isLoggedIn","logout","navigate","setItem","getHeaders","set","_","i0","ɵɵinject","i1","HttpClient","i2","Router","_2","factory","ɵfac","providedIn"],"sources":["/Users/alex/Documents/Programs/SwordInStone/Frontend/src/app/services/authentication.service.ts"],"sourcesContent":["import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { RegistrationResponse } from '../DTOs/RegistrationResponse';\nimport { Router } from '@angular/router';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthenticationService {\n  private token: any;\n  private headers: String = \"\";\n\n  constructor(private http: HttpClient,\n    private router: Router,\n    ) {\n  }\n\n  login(username: String, password: String): Promise<boolean> {\n    const payload = {\n      username: username,\n      password: password\n    };\n  \n    return new Promise((resolve, reject) => {\n      this.http.post<RegistrationResponse>('http://localhost:8080/login', payload, { responseType: 'json' })\n        .subscribe(response => {\n          console.log('Login successful!', response);\n          this.setToken(response.token);\n          resolve(true);\n        }, error => {\n          console.error('Login failed!', error);\n          reject(false);\n        });\n    });\n  }\n\n  \n  register(username: String, password: String) {\n    const payload = {\n      username: username,\n      password: password\n    };\n\n    return new Promisethis.http.post<RegistrationResponse>('http://localhost:8080/register', payload, { responseType: 'json' }).subscribe(response => {\n      console.log('Registration successful!', response);\n      this.setToken(response.token);\n      return true;\n    }, error => {\n      console.error('Registration failed!', error);\n    });\n    return false;\n  }\n\n  public getToken() {\n    return localStorage.getItem('token');\n  }\n\n  public isLoggedIn() {\n    return this.getToken() !== \"\"\n  }\n\n  public logout() {\n    this.setToken(\"\");\n    this.router.navigate(['/login']);\n  }\n\n  private setToken(token: any) {\n    localStorage.setItem('token',token);\n  }\n\n  public getHeaders() {\n    return new HttpHeaders().set('Authorization', `Bearer ${this.getToken()}`);\n  }\n}\n"],"mappings":"AAAA,SAAqBA,WAAW,QAAQ,sBAAsB;;;;AAQ9D,OAAM,MAAOC,qBAAqB;EAIhCC,YAAoBC,IAAgB,EAC1BC,MAAc;IADJ,KAAAD,IAAI,GAAJA,IAAI;IACd,KAAAC,MAAM,GAANA,MAAM;IAHR,KAAAC,OAAO,GAAW,EAAE;EAK5B;EAEAC,KAAKA,CAACC,QAAgB,EAAEC,QAAgB;IACtC,MAAMC,OAAO,GAAG;MACdF,QAAQ,EAAEA,QAAQ;MAClBC,QAAQ,EAAEA;KACX;IAED,OAAO,IAAIE,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAI;MACrC,IAAI,CAACT,IAAI,CAACU,IAAI,CAAuB,6BAA6B,EAAEJ,OAAO,EAAE;QAAEK,YAAY,EAAE;MAAM,CAAE,CAAC,CACnGC,SAAS,CAACC,QAAQ,IAAG;QACpBC,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEF,QAAQ,CAAC;QAC1C,IAAI,CAACG,QAAQ,CAACH,QAAQ,CAACI,KAAK,CAAC;QAC7BT,OAAO,CAAC,IAAI,CAAC;MACf,CAAC,EAAEU,KAAK,IAAG;QACTJ,OAAO,CAACI,KAAK,CAAC,eAAe,EAAEA,KAAK,CAAC;QACrCT,MAAM,CAAC,KAAK,CAAC;MACf,CAAC,CAAC;IACN,CAAC,CAAC;EACJ;EAGAU,QAAQA,CAACf,QAAgB,EAAEC,QAAgB;IACzC,MAAMC,OAAO,GAAG;MACdF,QAAQ,EAAEA,QAAQ;MAClBC,QAAQ,EAAEA;KACX;IAED,OAAO,IAAIe,WAAW,CAACpB,IAAI,CAACU,IAAI,CAAuB,gCAAgC,EAAEJ,OAAO,EAAE;MAAEK,YAAY,EAAE;IAAM,CAAE,CAAC,CAACC,SAAS,CAACC,QAAQ,IAAG;MAC/IC,OAAO,CAACC,GAAG,CAAC,0BAA0B,EAAEF,QAAQ,CAAC;MACjD,IAAI,CAACG,QAAQ,CAACH,QAAQ,CAACI,KAAK,CAAC;MAC7B,OAAO,IAAI;IACb,CAAC,EAAEC,KAAK,IAAG;MACTJ,OAAO,CAACI,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC9C,CAAC,CAAC;IACF,OAAO,KAAK;EACd;EAEOG,QAAQA,CAAA;IACb,OAAOC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EACtC;EAEOC,UAAUA,CAAA;IACf,OAAO,IAAI,CAACH,QAAQ,EAAE,KAAK,EAAE;EAC/B;EAEOI,MAAMA,CAAA;IACX,IAAI,CAACT,QAAQ,CAAC,EAAE,CAAC;IACjB,IAAI,CAACf,MAAM,CAACyB,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;EAClC;EAEQV,QAAQA,CAACC,KAAU;IACzBK,YAAY,CAACK,OAAO,CAAC,OAAO,EAACV,KAAK,CAAC;EACrC;EAEOW,UAAUA,CAAA;IACf,OAAO,IAAI/B,WAAW,EAAE,CAACgC,GAAG,CAAC,eAAe,EAAE,UAAU,IAAI,CAACR,QAAQ,EAAE,EAAE,CAAC;EAC5E;EAAC,QAAAS,CAAA,G;qBAhEUhC,qBAAqB,EAAAiC,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,MAAA;EAAA;EAAA,QAAAC,EAAA,G;WAArBvC,qBAAqB;IAAAwC,OAAA,EAArBxC,qBAAqB,CAAAyC,IAAA;IAAAC,UAAA,EAFpB;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}